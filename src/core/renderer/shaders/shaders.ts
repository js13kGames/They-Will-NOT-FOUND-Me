export const isoSpriteVS = `layout(location=1)in vec2 _M;layout(location=2)in vec3 _N;layout(location=3)in float _O;layout(location=4)in vec3 _P;struct _K{vec4 _U;vec4 _V;vec2 _W;vec2 _X;};layout(std140) uniform _J{_K _L[300];};layout(std140) uniform _Q{mat4 _G;vec4 _H;vec4 _I;};out vec2 oVT;out vec3 oW;out float oD,oC;void main(){_K v=_L[int(_O)];float n=.97,l=_I.w,o=_H.w;vec3 M=_I.xyz;vec4 u=l!=0.?v._V:v._U,s=_G*n*vec4(_N,1);s+=vec4(0.,0.,_P.z,0.);oD=s.z;oVT=(vec2(1)-(vec2(-_M.x,_M.y)+vec2(1))/2.)*u.zw+u.xy;gl_Position=vec4(s.xy+v._W*M.xy/2.+(_M.xy*(u.zw*M.xy/o)+(l!=0.?(u.xy-u.xy+(u.zw-u.zw)/2.)/u.zw*(u.zw*M.xy/o)*vec2(2,-2):vec2(0.)))/n,-oD/(50.*M.z),1);}`;
export const screenQuadVS = `layout(location=0)in vec2 v;out vec2 vp;void main(){vp=v,gl_Position=vec4(v.xy,0.,1.);}`;
export const deferredFS = `uniform sampler2D _A,_B,_C;uniform mat4 _D,_E;uniform vec2 _F;layout(location=0)out vec4 fC;in vec2 vp;void main(){vec4 v=texelFetch(_B,ivec2(gl_FragCoord.xy),0);float g=v.w*2.-1.;vec4 m=inverse(_D)*vec4(vp,g,1.),d=_E*m;float i,f,t=0.;for(f=-1.5;f<=1.5;f+=1.){for(i=-1.5;i<=1.5;i+=1.){vec4 n=texture(_A,(d.xy+vec2(1.))/vec2(2.)+vec2(i,f)/_F);float C=n.w*2.-1.;t+=d.z+.05>C?1.:.4;}}t/=16.;vec3 n=normalize(v.xyz*2.-vec3(1.)),C=vec3(.99,.97,.95);float c=texelFetch(_C,ivec2(gl_FragCoord.xy),0).x*255.;vec3 w=vec3(.95,.95,.85),B=vec3(.54,.69,.9),x=vec3(.6,.66,.72),F=vec3(0.,.7,0.),p=vec3(1.,1.,0.);float z=dot(n,vec3(0.,1.,0.));if(c>.5)C=p;if(c>1.5)C=p;if(c>2.5)C=F;if(c>3.5)C=vec3(.7,.45,.2);if(c>4.5)C=vec3(.7,.45,.2);if(c>5.5)C=.8*vec3(.9961,.9765,.9529);if(c>6.5)C=(z+sin(z*3.14+15.*gl_FragCoord.y/_F.y)*.5+1.)/2.*x*1.1+(-z+1.)/2.*F;vec3 A=t*w*max(0.,dot(normalize(vec3(.75,1.,.4)),n))+B*.3,o=C*clamp(A,0.,1.);if(g==-1.)o=mix(vec3(.2039,.3961,.6431),B,(gl_FragCoord.xy/_F).y);fC=vec4(clamp(o,0.,1.),1.);}`;
export const isoSpriteFS = `uniform sampler2D uTex,uMat;in vec2 oVT;in float oD;layout(location=0)out vec4 fc;layout(location=1)out vec4 m;void main(){ivec2 v=ivec2(oVT);vec4 o=texelFetch(uTex,v,0),u=texelFetch(uMat,v,0);float l=o.w;if(l==0.){discard;}float f=(oD+(l*2.-1.)+1.)/2.;fc=vec4(o.xyz,f);m=vec4(u.xyz,f);}`;
export const isoSpriteDepthFS = `uniform sampler2D uTex;in vec2 oVT;in float oD;layout(location=0)out vec4 fc;void main(){vec4 o=texelFetch(uTex,ivec2(oVT),0);float v=oD+(o.x*2.-1.)/2.;if(o.w<=0.){discard;}fc=vec4(vec3(v),1.);}`;
